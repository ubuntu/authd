// Code generated by "types-parser -source-package github.com/ubuntu/authd/internal/proto/authd -types authd.UILayout -types-aliases UILayout -package layouts -output ./uilayout.go -converter ../../internal/proto/authd/uilayout.go -converter-import github.com/ubuntu/authd/brokers/layouts -converter-package authd"; DO NOT EDIT.

package layouts

// UILayout is a wrapper for [authd.UILayout].
type UILayout struct {
	Type string `json:"type,omitempty"`
	Label *string `json:"label,omitempty"`
	Button *string `json:"button,omitempty"`
	Wait *string `json:"wait,omitempty"`
	Entry *string `json:"entry,omitempty"`
	Content *string `json:"content,omitempty"`
	Code *string `json:"code,omitempty"`
	RendersQrcode *bool `json:"renders_qrcode,omitempty"`
}

func (u UILayout) GetType() string {
	return u.Type
}

func (u UILayout) GetLabel() string {
	if u.Label == nil {
		return ""
	}
	return *u.Label
}

func (u UILayout) GetButton() string {
	if u.Button == nil {
		return ""
	}
	return *u.Button
}

func (u UILayout) GetWait() string {
	if u.Wait == nil {
		return ""
	}
	return *u.Wait
}

func (u UILayout) GetEntry() string {
	if u.Entry == nil {
		return ""
	}
	return *u.Entry
}

func (u UILayout) GetContent() string {
	if u.Content == nil {
		return ""
	}
	return *u.Content
}

func (u UILayout) GetCode() string {
	if u.Code == nil {
		return ""
	}
	return *u.Code
}

func (u UILayout) GetRendersQrcode() bool {
	if u.RendersQrcode == nil {
		return false
	}
	return *u.RendersQrcode
}


