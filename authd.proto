syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "github.com/ubuntu/authd";

service PAM {
  rpc AvailableBrokers(ABRequest) returns (ABResponse);

  rpc SelectBroker(SBRequest) returns (SBResponse);
  rpc SelectAuthenticationMode(SAMRequest) returns (SAMResponse);
  rpc IsAuthorized(IARequest) returns (IAResponse);
  rpc AbortSession(ASRequest) returns (google.protobuf.Empty);

  rpc SetDefaultBrokerForUser(SDBFURequest) returns (google.protobuf.Empty);
}

service NSS {
  rpc TestNSS(google.protobuf.Empty) returns (StringResponse);
}


message ABRequest {
  optional string user_name = 1;
}

message ABResponse {
  repeated BrokerInfo brokers_infos = 1;
  optional string previous_broker = 2;

  message BrokerInfo {
    string id = 1;
    string name = 2;
    optional string brand_icon = 3;
  }
}

message Empty {
}

message StringResponse {
  string msg = 1;
}

message SBRequest {
  string broker_id = 1;
  string username = 2;
  string lang = 3;
  repeated UILayout supported_ui_layouts = 4;
}

message UILayout {
  string type = 1;

  // common components.
  optional string label = 2;
  optional string button = 3;
  optional string wait = 4;

  // form only.
  optional string entry = 5;

  // qr code only.
  optional string content = 6;
}

message SBResponse {
  string session_id = 1;
  string encryption_key = 2;
  repeated AuthenticationMode authentication_modes = 3;

  message AuthenticationMode {
    string name = 1;
    string label = 2;
  }
}

message SAMRequest {
  string session_id = 1;
  string authentication_mode_name = 2;
}

message SAMResponse {
  UILayout ui_layout_info = 1;
}

message IARequest {
  string session_id = 1;
  string authentication_data = 2;
}

message IAResponse {
  string access = 1;
  string user_info = 2;
}

message SDBFURequest {
  string session_id = 1;
  string username = 2;
}

message ASRequest {
  string session_id = 1;
  string username = 2;
}
