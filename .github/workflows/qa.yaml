name: QA & sanity checks
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/automatic-doc-checks.yml'
      - '.readthedocs.yaml'
      - 'docs/**'
    tags:
      - "*"
  pull_request:
    paths-ignore:
      - '.github/workflows/automatic-doc-checks.yml'
      - '.readthedocs.yaml'
      - 'docs/**'

env:
  DEBIAN_FRONTEND: noninteractive
  GO_TESTS_TIMEOUT: 20m
  c_build_dependencies: >-
    clang-tools
    clang
    libglib2.0-dev
    libpam-dev

  go_build_dependencies: >-
    libglib2.0-dev
    libpam-dev
    libpwquality-dev

  go_test_dependencies: >-
    apparmor-profiles
    bubblewrap
    cracklib-runtime
    git-delta
    openssh-client
    openssh-server  

jobs:
  go-sanity:
    name: "Go: Code sanity"
    runs-on: ubuntu-24.04 # ubuntu-latest-runner
    steps:
      - uses: canonical/desktop-engineering/gh-actions/common/dpkg-install-speedup@main
      - name: Install dependencies
        run: |
          # Install dependencies
          set -eu

          sudo apt-get update
          sudo apt-get install -y ${{ env.go_build_dependencies }}
      - uses: actions/checkout@v5
      - name: Go code sanity check
        uses: canonical/desktop-engineering/gh-actions/go/code-sanity@go-toolchain-fallback
        with:
          golangci-lint-configfile: ".golangci.yaml"
          tools-directory: "tools"
      - name: Build cmd/authd with withexamplebroker tag
        run: |
          set -eu
          go build -tags withexamplebroker ./cmd/authd
      - name: Run PAM client for interactive testing purposes
        run: |
          set -eu
          go run -tags withpamrunner ./pam/tools/pam-runner login --exec-debug
      - name: Generate PAM module
        run: |
          set -eu
          find pam -name '*.so' -print -delete
          go generate -C pam -x
          test -e pam/pam_authd.so
          test -e pam/go-exec/pam_authd_exec.so
      - name: Generate PAM module with pam_debug tag
        run: |
          set -eu
          find pam -name '*.so' -print -delete
          go generate -C pam -x -tags pam_debug
          test -e pam/pam_authd.so
          test -e pam/go-exec/pam_authd_exec.so
