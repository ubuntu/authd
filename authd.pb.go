// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: authd.proto

package authd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionMode int32

const (
	SessionMode_UNDEFINED SessionMode = 0
	SessionMode_AUTH      SessionMode = 1
	SessionMode_PASSWD    SessionMode = 2
)

// Enum value maps for SessionMode.
var (
	SessionMode_name = map[int32]string{
		0: "UNDEFINED",
		1: "AUTH",
		2: "PASSWD",
	}
	SessionMode_value = map[string]int32{
		"UNDEFINED": 0,
		"AUTH":      1,
		"PASSWD":    2,
	}
)

func (x SessionMode) Enum() *SessionMode {
	p := new(SessionMode)
	*p = x
	return p
}

func (x SessionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_authd_proto_enumTypes[0].Descriptor()
}

func (SessionMode) Type() protoreflect.EnumType {
	return &file_authd_proto_enumTypes[0]
}

func (x SessionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionMode.Descriptor instead.
func (SessionMode) EnumDescriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_authd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{0}
}

type GPBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GPBRequest) Reset() {
	*x = GPBRequest{}
	mi := &file_authd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPBRequest) ProtoMessage() {}

func (x *GPBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPBRequest.ProtoReflect.Descriptor instead.
func (*GPBRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{1}
}

func (x *GPBRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GPBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousBroker string `protobuf:"bytes,1,opt,name=previous_broker,json=previousBroker,proto3" json:"previous_broker,omitempty"`
}

func (x *GPBResponse) Reset() {
	*x = GPBResponse{}
	mi := &file_authd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPBResponse) ProtoMessage() {}

func (x *GPBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPBResponse.ProtoReflect.Descriptor instead.
func (*GPBResponse) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{2}
}

func (x *GPBResponse) GetPreviousBroker() string {
	if x != nil {
		return x.PreviousBroker
	}
	return ""
}

type ABResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokersInfos []*ABResponse_BrokerInfo `protobuf:"bytes,1,rep,name=brokers_infos,json=brokersInfos,proto3" json:"brokers_infos,omitempty"`
}

func (x *ABResponse) Reset() {
	*x = ABResponse{}
	mi := &file_authd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ABResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABResponse) ProtoMessage() {}

func (x *ABResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABResponse.ProtoReflect.Descriptor instead.
func (*ABResponse) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{3}
}

func (x *ABResponse) GetBrokersInfos() []*ABResponse_BrokerInfo {
	if x != nil {
		return x.BrokersInfos
	}
	return nil
}

type StringResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *StringResponse) Reset() {
	*x = StringResponse{}
	mi := &file_authd_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringResponse) ProtoMessage() {}

func (x *StringResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringResponse.ProtoReflect.Descriptor instead.
func (*StringResponse) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{4}
}

func (x *StringResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokerId string      `protobuf:"bytes,1,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	Username string      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Lang     string      `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Mode     SessionMode `protobuf:"varint,4,opt,name=mode,proto3,enum=authd.SessionMode" json:"mode,omitempty"`
}

func (x *SBRequest) Reset() {
	*x = SBRequest{}
	mi := &file_authd_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBRequest) ProtoMessage() {}

func (x *SBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBRequest.ProtoReflect.Descriptor instead.
func (*SBRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{5}
}

func (x *SBRequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *SBRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SBRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SBRequest) GetMode() SessionMode {
	if x != nil {
		return x.Mode
	}
	return SessionMode_UNDEFINED
}

type SBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	EncryptionKey string `protobuf:"bytes,2,opt,name=encryption_key,json=encryptionKey,proto3" json:"encryption_key,omitempty"`
}

func (x *SBResponse) Reset() {
	*x = SBResponse{}
	mi := &file_authd_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBResponse) ProtoMessage() {}

func (x *SBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBResponse.ProtoReflect.Descriptor instead.
func (*SBResponse) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{6}
}

func (x *SBResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SBResponse) GetEncryptionKey() string {
	if x != nil {
		return x.EncryptionKey
	}
	return ""
}

type GAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId          string      `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SupportedUiLayouts []*UILayout `protobuf:"bytes,2,rep,name=supported_ui_layouts,json=supportedUiLayouts,proto3" json:"supported_ui_layouts,omitempty"`
}

func (x *GAMRequest) Reset() {
	*x = GAMRequest{}
	mi := &file_authd_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAMRequest) ProtoMessage() {}

func (x *GAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAMRequest.ProtoReflect.Descriptor instead.
func (*GAMRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{7}
}

func (x *GAMRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GAMRequest) GetSupportedUiLayouts() []*UILayout {
	if x != nil {
		return x.SupportedUiLayouts
	}
	return nil
}

type UILayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// common components.
	Label  *string `protobuf:"bytes,2,opt,name=label,proto3,oneof" json:"label,omitempty"`
	Button *string `protobuf:"bytes,3,opt,name=button,proto3,oneof" json:"button,omitempty"`
	Wait   *string `protobuf:"bytes,4,opt,name=wait,proto3,oneof" json:"wait,omitempty"`
	// form only.
	Entry *string `protobuf:"bytes,5,opt,name=entry,proto3,oneof" json:"entry,omitempty"`
	// qr code only.
	Content *string `protobuf:"bytes,6,opt,name=content,proto3,oneof" json:"content,omitempty"`
	Code    *string `protobuf:"bytes,7,opt,name=code,proto3,oneof" json:"code,omitempty"`
}

func (x *UILayout) Reset() {
	*x = UILayout{}
	mi := &file_authd_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UILayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UILayout) ProtoMessage() {}

func (x *UILayout) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UILayout.ProtoReflect.Descriptor instead.
func (*UILayout) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{8}
}

func (x *UILayout) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UILayout) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *UILayout) GetButton() string {
	if x != nil && x.Button != nil {
		return *x.Button
	}
	return ""
}

func (x *UILayout) GetWait() string {
	if x != nil && x.Wait != nil {
		return *x.Wait
	}
	return ""
}

func (x *UILayout) GetEntry() string {
	if x != nil && x.Entry != nil {
		return *x.Entry
	}
	return ""
}

func (x *UILayout) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UILayout) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

type GAMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthenticationModes []*GAMResponse_AuthenticationMode `protobuf:"bytes,1,rep,name=authentication_modes,json=authenticationModes,proto3" json:"authentication_modes,omitempty"`
}

func (x *GAMResponse) Reset() {
	*x = GAMResponse{}
	mi := &file_authd_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GAMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAMResponse) ProtoMessage() {}

func (x *GAMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAMResponse.ProtoReflect.Descriptor instead.
func (*GAMResponse) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{9}
}

func (x *GAMResponse) GetAuthenticationModes() []*GAMResponse_AuthenticationMode {
	if x != nil {
		return x.AuthenticationModes
	}
	return nil
}

type SAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId            string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	AuthenticationModeId string `protobuf:"bytes,2,opt,name=authentication_mode_id,json=authenticationModeId,proto3" json:"authentication_mode_id,omitempty"`
}

func (x *SAMRequest) Reset() {
	*x = SAMRequest{}
	mi := &file_authd_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMRequest) ProtoMessage() {}

func (x *SAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMRequest.ProtoReflect.Descriptor instead.
func (*SAMRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{10}
}

func (x *SAMRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SAMRequest) GetAuthenticationModeId() string {
	if x != nil {
		return x.AuthenticationModeId
	}
	return ""
}

type SAMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiLayoutInfo *UILayout `protobuf:"bytes,1,opt,name=ui_layout_info,json=uiLayoutInfo,proto3" json:"ui_layout_info,omitempty"`
}

func (x *SAMResponse) Reset() {
	*x = SAMResponse{}
	mi := &file_authd_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SAMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMResponse) ProtoMessage() {}

func (x *SAMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMResponse.ProtoReflect.Descriptor instead.
func (*SAMResponse) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{11}
}

func (x *SAMResponse) GetUiLayoutInfo() *UILayout {
	if x != nil {
		return x.UiLayoutInfo
	}
	return nil
}

type IARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId          string                        `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	AuthenticationData *IARequest_AuthenticationData `protobuf:"bytes,2,opt,name=authentication_data,json=authenticationData,proto3" json:"authentication_data,omitempty"`
}

func (x *IARequest) Reset() {
	*x = IARequest{}
	mi := &file_authd_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IARequest) ProtoMessage() {}

func (x *IARequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IARequest.ProtoReflect.Descriptor instead.
func (*IARequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{12}
}

func (x *IARequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *IARequest) GetAuthenticationData() *IARequest_AuthenticationData {
	if x != nil {
		return x.AuthenticationData
	}
	return nil
}

type IAResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Access string `protobuf:"bytes,1,opt,name=access,proto3" json:"access,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *IAResponse) Reset() {
	*x = IAResponse{}
	mi := &file_authd_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IAResponse) ProtoMessage() {}

func (x *IAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IAResponse.ProtoReflect.Descriptor instead.
func (*IAResponse) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{13}
}

func (x *IAResponse) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

func (x *IAResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SDBFURequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokerId string `protobuf:"bytes,1,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *SDBFURequest) Reset() {
	*x = SDBFURequest{}
	mi := &file_authd_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SDBFURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SDBFURequest) ProtoMessage() {}

func (x *SDBFURequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SDBFURequest.ProtoReflect.Descriptor instead.
func (*SDBFURequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{14}
}

func (x *SDBFURequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *SDBFURequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ESRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ESRequest) Reset() {
	*x = ESRequest{}
	mi := &file_authd_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ESRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESRequest) ProtoMessage() {}

func (x *ESRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESRequest.ProtoReflect.Descriptor instead.
func (*ESRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{15}
}

func (x *ESRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetPasswdByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ShouldPreCheck bool   `protobuf:"varint,2,opt,name=shouldPreCheck,proto3" json:"shouldPreCheck,omitempty"`
}

func (x *GetPasswdByNameRequest) Reset() {
	*x = GetPasswdByNameRequest{}
	mi := &file_authd_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPasswdByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPasswdByNameRequest) ProtoMessage() {}

func (x *GetPasswdByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPasswdByNameRequest.ProtoReflect.Descriptor instead.
func (*GetPasswdByNameRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{16}
}

func (x *GetPasswdByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPasswdByNameRequest) GetShouldPreCheck() bool {
	if x != nil {
		return x.ShouldPreCheck
	}
	return false
}

type GetGroupByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetGroupByNameRequest) Reset() {
	*x = GetGroupByNameRequest{}
	mi := &file_authd_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupByNameRequest) ProtoMessage() {}

func (x *GetGroupByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupByNameRequest.ProtoReflect.Descriptor instead.
func (*GetGroupByNameRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{17}
}

func (x *GetGroupByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetShadowByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetShadowByNameRequest) Reset() {
	*x = GetShadowByNameRequest{}
	mi := &file_authd_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShadowByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShadowByNameRequest) ProtoMessage() {}

func (x *GetShadowByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShadowByNameRequest.ProtoReflect.Descriptor instead.
func (*GetShadowByNameRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{18}
}

func (x *GetShadowByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	mi := &file_authd_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{19}
}

func (x *GetByIDRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PasswdEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Passwd  string `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Uid     uint32 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid     uint32 `protobuf:"varint,4,opt,name=gid,proto3" json:"gid,omitempty"`
	Gecos   string `protobuf:"bytes,5,opt,name=gecos,proto3" json:"gecos,omitempty"`
	Homedir string `protobuf:"bytes,6,opt,name=homedir,proto3" json:"homedir,omitempty"`
	Shell   string `protobuf:"bytes,7,opt,name=shell,proto3" json:"shell,omitempty"`
}

func (x *PasswdEntry) Reset() {
	*x = PasswdEntry{}
	mi := &file_authd_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswdEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswdEntry) ProtoMessage() {}

func (x *PasswdEntry) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswdEntry.ProtoReflect.Descriptor instead.
func (*PasswdEntry) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{20}
}

func (x *PasswdEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PasswdEntry) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *PasswdEntry) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PasswdEntry) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *PasswdEntry) GetGecos() string {
	if x != nil {
		return x.Gecos
	}
	return ""
}

func (x *PasswdEntry) GetHomedir() string {
	if x != nil {
		return x.Homedir
	}
	return ""
}

func (x *PasswdEntry) GetShell() string {
	if x != nil {
		return x.Shell
	}
	return ""
}

type PasswdEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*PasswdEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PasswdEntries) Reset() {
	*x = PasswdEntries{}
	mi := &file_authd_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswdEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswdEntries) ProtoMessage() {}

func (x *PasswdEntries) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswdEntries.ProtoReflect.Descriptor instead.
func (*PasswdEntries) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{21}
}

func (x *PasswdEntries) GetEntries() []*PasswdEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GroupEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Passwd  string   `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Gid     uint32   `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	Members []string `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GroupEntry) Reset() {
	*x = GroupEntry{}
	mi := &file_authd_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEntry) ProtoMessage() {}

func (x *GroupEntry) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEntry.ProtoReflect.Descriptor instead.
func (*GroupEntry) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{22}
}

func (x *GroupEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupEntry) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *GroupEntry) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *GroupEntry) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type GroupEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*GroupEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *GroupEntries) Reset() {
	*x = GroupEntries{}
	mi := &file_authd_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEntries) ProtoMessage() {}

func (x *GroupEntries) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEntries.ProtoReflect.Descriptor instead.
func (*GroupEntries) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{23}
}

func (x *GroupEntries) GetEntries() []*GroupEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ShadowEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Passwd             string `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	LastChange         int32  `protobuf:"varint,3,opt,name=last_change,json=lastChange,proto3" json:"last_change,omitempty"`
	ChangeMinDays      int32  `protobuf:"varint,4,opt,name=change_min_days,json=changeMinDays,proto3" json:"change_min_days,omitempty"`
	ChangeMaxDays      int32  `protobuf:"varint,5,opt,name=change_max_days,json=changeMaxDays,proto3" json:"change_max_days,omitempty"`
	ChangeWarnDays     int32  `protobuf:"varint,6,opt,name=change_warn_days,json=changeWarnDays,proto3" json:"change_warn_days,omitempty"`
	ChangeInactiveDays int32  `protobuf:"varint,7,opt,name=change_inactive_days,json=changeInactiveDays,proto3" json:"change_inactive_days,omitempty"`
	ExpireDate         int32  `protobuf:"varint,8,opt,name=expire_date,json=expireDate,proto3" json:"expire_date,omitempty"`
}

func (x *ShadowEntry) Reset() {
	*x = ShadowEntry{}
	mi := &file_authd_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShadowEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShadowEntry) ProtoMessage() {}

func (x *ShadowEntry) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShadowEntry.ProtoReflect.Descriptor instead.
func (*ShadowEntry) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{24}
}

func (x *ShadowEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShadowEntry) GetPasswd() string {
	if x != nil {
		return x.Passwd
	}
	return ""
}

func (x *ShadowEntry) GetLastChange() int32 {
	if x != nil {
		return x.LastChange
	}
	return 0
}

func (x *ShadowEntry) GetChangeMinDays() int32 {
	if x != nil {
		return x.ChangeMinDays
	}
	return 0
}

func (x *ShadowEntry) GetChangeMaxDays() int32 {
	if x != nil {
		return x.ChangeMaxDays
	}
	return 0
}

func (x *ShadowEntry) GetChangeWarnDays() int32 {
	if x != nil {
		return x.ChangeWarnDays
	}
	return 0
}

func (x *ShadowEntry) GetChangeInactiveDays() int32 {
	if x != nil {
		return x.ChangeInactiveDays
	}
	return 0
}

func (x *ShadowEntry) GetExpireDate() int32 {
	if x != nil {
		return x.ExpireDate
	}
	return 0
}

type ShadowEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ShadowEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *ShadowEntries) Reset() {
	*x = ShadowEntries{}
	mi := &file_authd_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShadowEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShadowEntries) ProtoMessage() {}

func (x *ShadowEntries) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShadowEntries.ProtoReflect.Descriptor instead.
func (*ShadowEntries) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{25}
}

func (x *ShadowEntries) GetEntries() []*ShadowEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ABResponse_BrokerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BrandIcon *string `protobuf:"bytes,3,opt,name=brand_icon,json=brandIcon,proto3,oneof" json:"brand_icon,omitempty"`
}

func (x *ABResponse_BrokerInfo) Reset() {
	*x = ABResponse_BrokerInfo{}
	mi := &file_authd_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ABResponse_BrokerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABResponse_BrokerInfo) ProtoMessage() {}

func (x *ABResponse_BrokerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABResponse_BrokerInfo.ProtoReflect.Descriptor instead.
func (*ABResponse_BrokerInfo) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ABResponse_BrokerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ABResponse_BrokerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ABResponse_BrokerInfo) GetBrandIcon() string {
	if x != nil && x.BrandIcon != nil {
		return *x.BrandIcon
	}
	return ""
}

type GAMResponse_AuthenticationMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *GAMResponse_AuthenticationMode) Reset() {
	*x = GAMResponse_AuthenticationMode{}
	mi := &file_authd_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GAMResponse_AuthenticationMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAMResponse_AuthenticationMode) ProtoMessage() {}

func (x *GAMResponse_AuthenticationMode) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAMResponse_AuthenticationMode.ProtoReflect.Descriptor instead.
func (*GAMResponse_AuthenticationMode) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GAMResponse_AuthenticationMode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GAMResponse_AuthenticationMode) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type IARequest_AuthenticationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Item:
	//
	//	*IARequest_AuthenticationData_Challenge
	//	*IARequest_AuthenticationData_Wait
	//	*IARequest_AuthenticationData_Skip
	Item isIARequest_AuthenticationData_Item `protobuf_oneof:"item"`
}

func (x *IARequest_AuthenticationData) Reset() {
	*x = IARequest_AuthenticationData{}
	mi := &file_authd_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IARequest_AuthenticationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IARequest_AuthenticationData) ProtoMessage() {}

func (x *IARequest_AuthenticationData) ProtoReflect() protoreflect.Message {
	mi := &file_authd_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IARequest_AuthenticationData.ProtoReflect.Descriptor instead.
func (*IARequest_AuthenticationData) Descriptor() ([]byte, []int) {
	return file_authd_proto_rawDescGZIP(), []int{12, 0}
}

func (m *IARequest_AuthenticationData) GetItem() isIARequest_AuthenticationData_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *IARequest_AuthenticationData) GetChallenge() string {
	if x, ok := x.GetItem().(*IARequest_AuthenticationData_Challenge); ok {
		return x.Challenge
	}
	return ""
}

func (x *IARequest_AuthenticationData) GetWait() string {
	if x, ok := x.GetItem().(*IARequest_AuthenticationData_Wait); ok {
		return x.Wait
	}
	return ""
}

func (x *IARequest_AuthenticationData) GetSkip() string {
	if x, ok := x.GetItem().(*IARequest_AuthenticationData_Skip); ok {
		return x.Skip
	}
	return ""
}

type isIARequest_AuthenticationData_Item interface {
	isIARequest_AuthenticationData_Item()
}

type IARequest_AuthenticationData_Challenge struct {
	Challenge string `protobuf:"bytes,1,opt,name=challenge,proto3,oneof"`
}

type IARequest_AuthenticationData_Wait struct {
	Wait string `protobuf:"bytes,2,opt,name=wait,proto3,oneof"`
}

type IARequest_AuthenticationData_Skip struct {
	Skip string `protobuf:"bytes,3,opt,name=skip,proto3,oneof"`
}

func (*IARequest_AuthenticationData_Challenge) isIARequest_AuthenticationData_Item() {}

func (*IARequest_AuthenticationData_Wait) isIARequest_AuthenticationData_Item() {}

func (*IARequest_AuthenticationData_Skip) isIARequest_AuthenticationData_Item() {}

var File_authd_proto protoreflect.FileDescriptor

var file_authd_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x75, 0x74, 0x68, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28, 0x0a,
	0x0a, 0x47, 0x50, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0b, 0x47, 0x50, 0x42, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x22,
	0xb4, 0x01, 0x0a, 0x0a, 0x41, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0d, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x41, 0x42,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x1a, 0x63, 0x0a, 0x0a, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x80, 0x01, 0x0a, 0x09, 0x53,
	0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x0a,
	0x0a, 0x53, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x22, 0x6e, 0x0a, 0x0a, 0x47, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x69, 0x5f, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x64, 0x2e, 0x55, 0x49, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x12, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x55, 0x69, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x73, 0x22, 0xff, 0x01, 0x0a, 0x08, 0x55, 0x49, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x77, 0x61, 0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x47, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x41, 0x4d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x3a, 0x0a,
	0x12, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x61, 0x0a, 0x0a, 0x53, 0x41, 0x4d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0b,
	0x53, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x75,
	0x69, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x55, 0x49, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x52, 0x0c, 0x75, 0x69, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xea, 0x01, 0x0a, 0x09, 0x49, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x54, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x64, 0x2e, 0x49, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x68, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x77,
	0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x77, 0x61, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x36, 0x0a, 0x0a, 0x49, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x47, 0x0a, 0x0c, 0x53, 0x44, 0x42, 0x46, 0x55,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x2a, 0x0a, 0x09, 0x45, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xa3, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x67, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x65, 0x63, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x65, 0x63, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x68, 0x65, 0x6c, 0x6c, 0x22, 0x3d, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x67, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x3b, 0x0a, 0x0c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d,
	0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x78,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x77,
	0x61, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x61, 0x72, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x2a, 0x32, 0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x41, 0x55, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x44, 0x10, 0x02, 0x32, 0xd3, 0x03, 0x0a, 0x03, 0x50, 0x41, 0x4d, 0x12, 0x33, 0x0a, 0x10,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x73,
	0x12, 0x0c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x41, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47,
	0x50, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x64, 0x2e, 0x47, 0x50, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x0c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x12, 0x10, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x53, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x53, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x11, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x18, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x53, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x53, 0x41, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0f, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x64, 0x2e, 0x49, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x64, 0x2e, 0x49, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x0a, 0x45, 0x6e, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x64, 0x2e, 0x45, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x17,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e,
	0x53, 0x44, 0x42, 0x46, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xf2, 0x03, 0x0a, 0x03, 0x4e,
	0x53, 0x53, 0x12, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x64, 0x42, 0x79, 0x55, 0x49, 0x44, 0x12, 0x15, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x39, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x47, 0x49,
	0x44, 0x12, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x64, 0x2e, 0x53, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x64, 0x2e, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x19, 0x5a, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x62,
	0x75, 0x6e, 0x74, 0x75, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_authd_proto_rawDescOnce sync.Once
	file_authd_proto_rawDescData = file_authd_proto_rawDesc
)

func file_authd_proto_rawDescGZIP() []byte {
	file_authd_proto_rawDescOnce.Do(func() {
		file_authd_proto_rawDescData = protoimpl.X.CompressGZIP(file_authd_proto_rawDescData)
	})
	return file_authd_proto_rawDescData
}

var file_authd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_authd_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_authd_proto_goTypes = []any{
	(SessionMode)(0),                       // 0: authd.SessionMode
	(*Empty)(nil),                          // 1: authd.Empty
	(*GPBRequest)(nil),                     // 2: authd.GPBRequest
	(*GPBResponse)(nil),                    // 3: authd.GPBResponse
	(*ABResponse)(nil),                     // 4: authd.ABResponse
	(*StringResponse)(nil),                 // 5: authd.StringResponse
	(*SBRequest)(nil),                      // 6: authd.SBRequest
	(*SBResponse)(nil),                     // 7: authd.SBResponse
	(*GAMRequest)(nil),                     // 8: authd.GAMRequest
	(*UILayout)(nil),                       // 9: authd.UILayout
	(*GAMResponse)(nil),                    // 10: authd.GAMResponse
	(*SAMRequest)(nil),                     // 11: authd.SAMRequest
	(*SAMResponse)(nil),                    // 12: authd.SAMResponse
	(*IARequest)(nil),                      // 13: authd.IARequest
	(*IAResponse)(nil),                     // 14: authd.IAResponse
	(*SDBFURequest)(nil),                   // 15: authd.SDBFURequest
	(*ESRequest)(nil),                      // 16: authd.ESRequest
	(*GetPasswdByNameRequest)(nil),         // 17: authd.GetPasswdByNameRequest
	(*GetGroupByNameRequest)(nil),          // 18: authd.GetGroupByNameRequest
	(*GetShadowByNameRequest)(nil),         // 19: authd.GetShadowByNameRequest
	(*GetByIDRequest)(nil),                 // 20: authd.GetByIDRequest
	(*PasswdEntry)(nil),                    // 21: authd.PasswdEntry
	(*PasswdEntries)(nil),                  // 22: authd.PasswdEntries
	(*GroupEntry)(nil),                     // 23: authd.GroupEntry
	(*GroupEntries)(nil),                   // 24: authd.GroupEntries
	(*ShadowEntry)(nil),                    // 25: authd.ShadowEntry
	(*ShadowEntries)(nil),                  // 26: authd.ShadowEntries
	(*ABResponse_BrokerInfo)(nil),          // 27: authd.ABResponse.BrokerInfo
	(*GAMResponse_AuthenticationMode)(nil), // 28: authd.GAMResponse.AuthenticationMode
	(*IARequest_AuthenticationData)(nil),   // 29: authd.IARequest.AuthenticationData
}
var file_authd_proto_depIdxs = []int32{
	27, // 0: authd.ABResponse.brokers_infos:type_name -> authd.ABResponse.BrokerInfo
	0,  // 1: authd.SBRequest.mode:type_name -> authd.SessionMode
	9,  // 2: authd.GAMRequest.supported_ui_layouts:type_name -> authd.UILayout
	28, // 3: authd.GAMResponse.authentication_modes:type_name -> authd.GAMResponse.AuthenticationMode
	9,  // 4: authd.SAMResponse.ui_layout_info:type_name -> authd.UILayout
	29, // 5: authd.IARequest.authentication_data:type_name -> authd.IARequest.AuthenticationData
	21, // 6: authd.PasswdEntries.entries:type_name -> authd.PasswdEntry
	23, // 7: authd.GroupEntries.entries:type_name -> authd.GroupEntry
	25, // 8: authd.ShadowEntries.entries:type_name -> authd.ShadowEntry
	1,  // 9: authd.PAM.AvailableBrokers:input_type -> authd.Empty
	2,  // 10: authd.PAM.GetPreviousBroker:input_type -> authd.GPBRequest
	6,  // 11: authd.PAM.SelectBroker:input_type -> authd.SBRequest
	8,  // 12: authd.PAM.GetAuthenticationModes:input_type -> authd.GAMRequest
	11, // 13: authd.PAM.SelectAuthenticationMode:input_type -> authd.SAMRequest
	13, // 14: authd.PAM.IsAuthenticated:input_type -> authd.IARequest
	16, // 15: authd.PAM.EndSession:input_type -> authd.ESRequest
	15, // 16: authd.PAM.SetDefaultBrokerForUser:input_type -> authd.SDBFURequest
	17, // 17: authd.NSS.GetPasswdByName:input_type -> authd.GetPasswdByNameRequest
	20, // 18: authd.NSS.GetPasswdByUID:input_type -> authd.GetByIDRequest
	1,  // 19: authd.NSS.GetPasswdEntries:input_type -> authd.Empty
	18, // 20: authd.NSS.GetGroupByName:input_type -> authd.GetGroupByNameRequest
	20, // 21: authd.NSS.GetGroupByGID:input_type -> authd.GetByIDRequest
	1,  // 22: authd.NSS.GetGroupEntries:input_type -> authd.Empty
	19, // 23: authd.NSS.GetShadowByName:input_type -> authd.GetShadowByNameRequest
	1,  // 24: authd.NSS.GetShadowEntries:input_type -> authd.Empty
	4,  // 25: authd.PAM.AvailableBrokers:output_type -> authd.ABResponse
	3,  // 26: authd.PAM.GetPreviousBroker:output_type -> authd.GPBResponse
	7,  // 27: authd.PAM.SelectBroker:output_type -> authd.SBResponse
	10, // 28: authd.PAM.GetAuthenticationModes:output_type -> authd.GAMResponse
	12, // 29: authd.PAM.SelectAuthenticationMode:output_type -> authd.SAMResponse
	14, // 30: authd.PAM.IsAuthenticated:output_type -> authd.IAResponse
	1,  // 31: authd.PAM.EndSession:output_type -> authd.Empty
	1,  // 32: authd.PAM.SetDefaultBrokerForUser:output_type -> authd.Empty
	21, // 33: authd.NSS.GetPasswdByName:output_type -> authd.PasswdEntry
	21, // 34: authd.NSS.GetPasswdByUID:output_type -> authd.PasswdEntry
	22, // 35: authd.NSS.GetPasswdEntries:output_type -> authd.PasswdEntries
	23, // 36: authd.NSS.GetGroupByName:output_type -> authd.GroupEntry
	23, // 37: authd.NSS.GetGroupByGID:output_type -> authd.GroupEntry
	24, // 38: authd.NSS.GetGroupEntries:output_type -> authd.GroupEntries
	25, // 39: authd.NSS.GetShadowByName:output_type -> authd.ShadowEntry
	26, // 40: authd.NSS.GetShadowEntries:output_type -> authd.ShadowEntries
	25, // [25:41] is the sub-list for method output_type
	9,  // [9:25] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_authd_proto_init() }
func file_authd_proto_init() {
	if File_authd_proto != nil {
		return
	}
	file_authd_proto_msgTypes[8].OneofWrappers = []any{}
	file_authd_proto_msgTypes[26].OneofWrappers = []any{}
	file_authd_proto_msgTypes[28].OneofWrappers = []any{
		(*IARequest_AuthenticationData_Challenge)(nil),
		(*IARequest_AuthenticationData_Wait)(nil),
		(*IARequest_AuthenticationData_Skip)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_authd_proto_goTypes,
		DependencyIndexes: file_authd_proto_depIdxs,
		EnumInfos:         file_authd_proto_enumTypes,
		MessageInfos:      file_authd_proto_msgTypes,
	}.Build()
	File_authd_proto = out.File
	file_authd_proto_rawDesc = nil
	file_authd_proto_goTypes = nil
	file_authd_proto_depIdxs = nil
}
